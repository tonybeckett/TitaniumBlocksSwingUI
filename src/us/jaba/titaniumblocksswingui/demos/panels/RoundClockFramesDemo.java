/*
 * Copyright (c) 2015, Tony Beckett
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * The names of its contributors may not be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
package us.jaba.titaniumblocksswingui.demos.panels;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.Calendar;
import java.util.List;
import us.jaba.titaniumblocks.core.Scale;
import us.jaba.titaniumblocks.core.color.ColorPalette;
import us.jaba.titaniumblocks.core.font.FontSupport;
import us.jaba.titaniumblocks.core.frames.BasicFrame;
import us.jaba.titaniumblocks.core.frames.types.FramesCoreInfo;
import us.jaba.titaniumblocks.core.text.types.PolarText;
import us.jaba.titaniumblocks.core.tickmarks.marks.types.clock.round.FourNumbersTicks;
import us.jaba.titaniumblocks.displays.round.RoundClockDial;
import us.jaba.titaniumblocksswingui.Antimate;
import us.jaba.titaniumblocksswingui.panels.ClockPanel;

/**
 *
 * @author tbeckett
 */
public class RoundClockFramesDemo extends javax.swing.JFrame
{

    public RoundClockFramesDemo()
    {
        initComponents();
        init();

    }

    private void init()
    {

        List<BasicFrame> frames = FramesCoreInfo.getInstanceOfEachRound();

        GridLayout gl = new GridLayout();
        gl.setColumns(4);
        gl.setRows((frames.size() / 4) + 1);
        this.jPanel1.setLayout(gl);
        this.jPanel1.setBackground(Color.WHITE);

        for (BasicFrame f : frames)
        {
            final ClockPanel panel = new ClockPanel(new RoundClockDial());
            panel.setBackground(ColorPalette.WHITE);
            panel.setOpaque(false);
            panel.setFrame(f);
            panel.setTickmarks(new FourNumbersTicks());
//            TitleText tt = new TitleText();
//            tt.setFont(FontSupport.getStandardFont().deriveFont(56.0f));
//
//           
//            panel.setTitleText(tt);
            ((PolarText)panel.getTitleText()).setValue(f.getClass().getSimpleName().replace("RoundFrame", "").toUpperCase());
            panel.getTitleText().setFont(FontSupport.getStandardFont().deriveFont(38.0f));
            ((PolarText)panel.getTitleText()).setRadiusAdjust(new Scale(0.35));
            panel.init(200, 200);
            this.jPanel1.add(panel);

//       this.setIconImage(Images.titaniumblocks128);
            Antimate antimate = new Antimate(100.0, 0.1f)
            {
                @Override
                public void update(double d)
                {
                    Calendar cal = Calendar.getInstance();
                    panel.setValueAnimated(cal.get(Calendar.HOUR), cal.get(Calendar.MINUTE), cal.get(Calendar.SECOND));
                }
            };

            new Thread(antimate).start();
        }

        this.setSize(new Dimension(800, 800 + 22));
        this.setTitle("TitaniumBlocks - RoundFramesDemo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SingleLineGaugeDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SingleLineGaugeDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SingleLineGaugeDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SingleLineGaugeDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new RoundClockFramesDemo().setVisible(true);
            }
        });
    }
}
